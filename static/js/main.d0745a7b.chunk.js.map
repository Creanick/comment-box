{"version":3,"sources":["components/RandomAvatar.js","App.js","index.js"],"names":["randomArrayPicker","array","min","max","length","Math","ceil","floor","random","accessoriesTypes","hairColors","facialHairs","facialHairColors","clothes","colorFabrics","eyes","eyeBrows","mouths","skins","staticStyle","topType","accessoriesType","hairColor","facialHairType","facialHairColor","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","RandomAvatar","props","size","onClick","style","width","height","avatarStyle","App","className","ReactDOM","render","document","getElementById"],"mappings":"iNAEMA,EAAoB,SAAAC,GAMxB,OAAOA,GALeC,EAKI,EALCC,EAKEF,EAAMG,OAAS,EAJ1CF,EAAMG,KAAKC,KAAKJ,GAChBC,EAAME,KAAKE,MAAMJ,GACVE,KAAKE,MAAMF,KAAKG,UAAYL,EAAMD,EAAM,IAAMA,IAHvD,IAAsBA,EAAKC,GAiBvBM,EAAmB,CACvB,OACA,iBACA,iBACA,QACA,aACA,aAEIC,EAAa,CACjB,SACA,QACA,SACA,eACA,QACA,YACA,YACA,WACA,MACA,cAEIC,EAAc,CAClB,QACA,cACA,aACA,gBACA,iBACA,mBAEIC,EAAmB,CACvB,SACA,QACA,SACA,eACA,QACA,YACA,WACA,OAEIC,EAAU,CACd,cACA,gBACA,gBACA,SACA,iBAEIC,EAAe,CACnB,QACA,SACA,SACA,SACA,SACA,SACA,UACA,aACA,cACA,eACA,YACA,eACA,MACA,SAEIC,EAAO,CAAC,UAAW,QAAS,OAAQ,SAAU,aAC9CC,EAAW,CACf,UACA,iBACA,cACA,gBACA,uBACA,SACA,iBAEIC,EAAS,CAAC,UAAW,QAAS,WAC9BC,EAAQ,CACZ,SACA,SACA,OACA,QACA,QACA,YACA,SAiBIC,EAdG,CACLC,QAASpB,EA5FI,CACf,oBACA,wBACA,sBACA,qBACA,sBACA,sBACA,uBAsFEqB,gBAAiBrB,EAAkBS,GACnCa,UAAWtB,EAAkBU,GAC7Ba,eAAgBvB,EAAkBW,GAClCa,gBAAiBxB,EAAkBY,GACnCa,WAAYzB,EAAkBa,GAC9Ba,YAAa1B,EAAkBc,GAC/Ba,QAAS3B,EAAkBe,GAC3Ba,YAAa5B,EAAkBgB,GAC/Ba,UAAW7B,EAAkBiB,GAC7Ba,UAAW9B,EAAkBkB,IAiBlBa,MAbf,SAAsBC,GAAQ,IAAD,EACqCA,EAAxDC,YADmB,MACZ,IADY,IACqCD,EAA5CE,eADO,MACG,aADH,IACqCF,EAAxBG,aADb,MACqBhB,EADrB,EAE3B,OACE,0BAAMe,QAASA,GACb,kBAAC,IAAD,eACEC,MAAO,CAAEC,MAAOH,EAAO,KAAMI,OAAQJ,EAAO,MAC5CK,YAAY,UACRH,M,OChHGI,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,CAAcP,KAAM,OCF1BQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d0745a7b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"avataaars\";\nconst randomArrayPicker = array => {\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  return array[getRandomInt(0, array.length - 1)];\n};\n\nconst topTypes = [\n  \"ShortHairDreads01\",\n  \"ShortHairShaggyMullet\",\n  \"ShortHairShortCurly\",\n  \"ShortHairShortFlat\",\n  \"ShortHairShortRound\",\n  \"ShortHairShortWaved\",\n  \"ShortHairTheCaesar\"\n];\nconst accessoriesTypes = [\n  \"Kurt\",\n  \"Prescription02\",\n  \"Prescription01\",\n  \"Round\",\n  \"Sunglasses\",\n  \"Wayfarers\"\n];\nconst hairColors = [\n  \"Auburn\",\n  \"Black\",\n  \"Blonde\",\n  \"BlondeGolden\",\n  \"Brown\",\n  \"BrownDark\",\n  \"PastePink\",\n  \"Platinum\",\n  \"Red\",\n  \"SilverGray\"\n];\nconst facialHairs = [\n  \"Blank\",\n  \"BeardMedium\",\n  \"BeardLight\",\n  \"BeardMagestic\",\n  \"MoustacheFancy\",\n  \"MoustacheMagnum\"\n];\nconst facialHairColors = [\n  \"Auburn\",\n  \"Black\",\n  \"Blonde\",\n  \"BlondeGolden\",\n  \"Brown\",\n  \"BrownDark\",\n  \"Platinum\",\n  \"Red\"\n];\nconst clothes = [\n  \"BlazerShirt\",\n  \"BlazerSweater\",\n  \"CollarSweater\",\n  \"Hoodie\",\n  \"ShirtCrewNeck\"\n];\nconst colorFabrics = [\n  \"Black\",\n  \"Blue01\",\n  \"Blue02\",\n  \"Blue03\",\n  \"Gray01\",\n  \"Gray02\",\n  \"Heather\",\n  \"PastelBlue\",\n  \"PastelGreen\",\n  \"PastelOrange\",\n  \"PastelRed\",\n  \"PastelYellow\",\n  \"Red\",\n  \"White\"\n];\nconst eyes = [\"Default\", \"Happy\", \"Side\", \"Squint\", \"Surprised\"];\nconst eyeBrows = [\n  \"Default\",\n  \"DefaultNatural\",\n  \"FlatNatural\",\n  \"RaisedExcited\",\n  \"RaisedExcitedNatural\",\n  \"UpDown\",\n  \"UpDownNatural\"\n];\nconst mouths = [\"Default\", \"Smile\", \"Twinkle\"];\nconst skins = [\n  \"Tanned\",\n  \"Yellow\",\n  \"Pale\",\n  \"Light\",\n  \"Brown\",\n  \"DarkBrown\",\n  \"Black\"\n];\nexport const randomStyleGenerator = () => {\n  return {\n    topType: randomArrayPicker(topTypes),\n    accessoriesType: randomArrayPicker(accessoriesTypes),\n    hairColor: randomArrayPicker(hairColors),\n    facialHairType: randomArrayPicker(facialHairs),\n    facialHairColor: randomArrayPicker(facialHairColors),\n    clotheType: randomArrayPicker(clothes),\n    clotheColor: randomArrayPicker(colorFabrics),\n    eyeType: randomArrayPicker(eyes),\n    eyebrowType: randomArrayPicker(eyeBrows),\n    mouthType: randomArrayPicker(mouths),\n    skinColor: randomArrayPicker(skins)\n  };\n};\nconst staticStyle = randomStyleGenerator();\nfunction RandomAvatar(props) {\n  const { size = 100, onClick = () => {}, style = staticStyle } = props;\n  return (\n    <span onClick={onClick}>\n      <Avatar\n        style={{ width: size + \"px\", height: size + \"px\" }}\n        avatarStyle=\"Circle\"\n        {...style}\n      />\n    </span>\n  );\n}\n\nexport default RandomAvatar;\n","import React from \"react\";\nimport RandomAvatar from \"./components/RandomAvatar\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RandomAvatar size={80} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}